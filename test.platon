


∘: Hom_C (x,y) × Hom_C (y,z) → Hom_C (x,z)
id_x: Hom_C (x,x)



inv: C → C 
Δ: C → C ⊗ C
m: C ⊗ C → C
ρ: A ⊗ C → C




(f ⊗ g ⊗ h)




⟨x,y⟩












let x = y in z


-- This is a another comment
let z = x in p -- in the same line as source code.
let g = d in q



fn x → 1 2 3 4

f ⇒

f ⊦







↑ ↓ ⟨ ⟩ ∈ ∩ ∪ ∨ ∧
←

“This is a string” — It uses the non-typewriter convention different opening and closing quotes.

          ⎧ ₛ
let f x = ⎨ Why not
          ⎩ It is not that hard.


x = fn
  | square x →
  | test y →
  | record z →
  | var y →



main = do
     putStrLn "Hello World."
