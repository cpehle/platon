* Syntax

-- This is a comment

∘: Hom_C (x,y) × Hom_C (y,z) → Hom_C (x,z)
id_x: Hom_C (x,x)


inv: C → C 
Δ: C → C ⊗ C
m: C ⊗ C → C
ρ: A ⊗ C → C


– Trace operator

! : C → I 




μ θ γ







f: [Δ Δ ∘ id m id ∘ m m]  [Δ ∘ id inv ∘ m] Δ
g: [Δ                ]

ρ 2 3 4



τ [
1 2 3 3 4 5 : vec _ int
Δ   Δ  Δ


σ 2 3 [



] 



σ 2 3 [



]

]


inv inv inv id inv id
m m m 

(f ⊗ g ⊗ h)
⟨x,y⟩

let x = y in z

-- This is a another comment


f x → 1 2 3 4
f y z ⇒
f ⊦ s d


↑ ↓ ⟨ ⟩ ∈ ∩ ∪ ∨ ∧ ←

“This is a string” -- It uses the non-typewriter convention different opening and closing quotes.

          ⎧ ₛ
let f x = ⎨ Why not
          ⎩ It is not that hard.


x = fn
  | square x →
  | test y →
  | record z →
  | var y →



main = do
     putStrLn "Hello World."
